services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-wm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-wm_password}
      POSTGRES_DB: ${POSTGRES_DB:-wm_db}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build:
      context: .
    image: website-monitor:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./:/app

  worker:
    build:
      context: .
    image: website-monitor:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: python -m worker.runner
    volumes:
      - ./:/app
    restart: unless-stopped

  bot:
    build:
      context: .
    image: website-monitor:latest
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
    command: python -m bot.telegram_bot
    volumes:
      - ./:/app
    restart: unless-stopped

volumes:
  pgdata:
